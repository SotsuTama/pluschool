# Generated by Django 3.2.9 on 2021-12-07 00:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerTb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_id', models.CharField(db_column='ANSWER', max_length=1000)),
                ('posted_time', models.DateTimeField(db_column='POSTED_TIME')),
                ('good_count', models.IntegerField(db_column='GOOD_COUNT')),
            ],
            options={
                'db_table': 'ANSWER_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupTb',
            fields=[
                ('group_id', models.AutoField(db_column='GROUP_ID', primary_key=True, serialize=False)),
                ('group_name', models.CharField(db_column='GROUP_NAME', max_length=30)),
                ('user_id', models.CharField(db_column='USER_ID', max_length=8)),
            ],
            options={
                'db_table': 'GROUP_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupTypeTb',
            fields=[
                ('group_type_id', models.AutoField(db_column='GROUP_TYPE_ID', primary_key=True, serialize=False)),
                ('group_type', models.CharField(db_column='GROUP_TYPE', max_length=30)),
            ],
            options={
                'db_table': 'GROUP_TYPE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HourTb',
            fields=[
                ('hour_id', models.CharField(db_column='HOUR_ID', max_length=10, primary_key=True, serialize=False)),
                ('start_time', models.TimeField(db_column='START_TIME')),
                ('ending_time', models.TimeField(db_column='ENDING_TIME')),
            ],
            options={
                'db_table': 'HOUR_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NgWordTb',
            fields=[
                ('ng_word_id', models.AutoField(db_column='NG_WORD_ID', primary_key=True, serialize=False)),
                ('ng_word', models.CharField(db_column='NG_WORD', max_length=30)),
            ],
            options={
                'db_table': 'NG_WORD_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QCategoryTb',
            fields=[
                ('q_category_id', models.AutoField(db_column='Q_CATEGORY_ID', primary_key=True, serialize=False)),
                ('q_category', models.CharField(db_column='Q_CATEGORY', max_length=30)),
            ],
            options={
                'db_table': 'Q_CATEGORY_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QStateTb',
            fields=[
                ('q_state_id', models.AutoField(db_column='Q_STATE_ID', primary_key=True, serialize=False)),
                ('q_state', models.CharField(db_column='Q_STATE', max_length=30)),
            ],
            options={
                'db_table': 'Q_STATE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionTb',
            fields=[
                ('question_id', models.AutoField(db_column='QUESTION_ID', primary_key=True, serialize=False)),
                ('question', models.CharField(db_column='QUESTION', max_length=1000)),
                ('posted_time', models.DateTimeField(db_column='POSTED_TIME')),
                ('reply_limit', models.DateTimeField(db_column='REPLY_LIMIT')),
            ],
            options={
                'db_table': 'QUESTION_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReminderCategoryTb',
            fields=[
                ('reminder_category_id', models.AutoField(db_column='REMINDER_CATEGORY_ID', primary_key=True, serialize=False)),
                ('reminder_category', models.CharField(db_column='REMINDER_CATEGORY', max_length=30)),
                ('user_id', models.CharField(blank=True, db_column='USER_ID', max_length=8, null=True)),
            ],
            options={
                'db_table': 'REMINDER_CATEGORY_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReminderTb',
            fields=[
                ('reminder_id', models.AutoField(db_column='REMINDER_ID', primary_key=True, serialize=False)),
                ('user_id', models.CharField(db_column='USER_ID', max_length=8)),
                ('title', models.CharField(db_column='TITLE', max_length=30)),
                ('limit_time', models.DateTimeField(blank=True, db_column='LIMIT_TIME', null=True)),
                ('contents', models.CharField(blank=True, db_column='CONTENTS', max_length=300, null=True)),
                ('file_url', models.CharField(blank=True, db_column='FILE_URL', max_length=2048, null=True)),
            ],
            options={
                'db_table': 'REMINDER_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportTb',
            fields=[
                ('report_id', models.AutoField(db_column='REPORT_ID', primary_key=True, serialize=False)),
                ('report_time', models.DateTimeField(db_column='REPORT_TIME')),
            ],
            options={
                'db_table': 'REPORT_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportTypeTb',
            fields=[
                ('report_type_id', models.AutoField(db_column='REPORT_TYPE_ID', primary_key=True, serialize=False)),
                ('report_type', models.CharField(db_column='REPORT_TYPE', max_length=300)),
            ],
            options={
                'db_table': 'REPORT_TYPE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleTb',
            fields=[
                ('role_id', models.AutoField(db_column='ROLE_ID', primary_key=True, serialize=False)),
                ('role', models.CharField(db_column='ROLE', max_length=30)),
                ('level', models.IntegerField(db_column='LEVEL')),
            ],
            options={
                'db_table': 'ROLE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleTb',
            fields=[
                ('schedule_id', models.AutoField(db_column='SCHEDULE_ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='TITLE', max_length=30)),
                ('user_id', models.CharField(db_column='USER_ID', max_length=8)),
                ('start_time', models.DateTimeField(db_column='START_TIME')),
                ('ending_time', models.DateTimeField(db_column='ENDING_TIME')),
                ('place', models.CharField(blank=True, db_column='PLACE', max_length=30, null=True)),
                ('memo', models.CharField(blank=True, db_column='MEMO', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'SCHEDULE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShareReminderTb',
            fields=[
                ('share_reminder_id', models.AutoField(db_column='SHARE_REMINDER_ID', primary_key=True, serialize=False)),
                ('user_id', models.CharField(db_column='USER_ID', max_length=8)),
                ('check_flg', models.IntegerField(db_column='CHECK_FLG')),
            ],
            options={
                'db_table': 'SHARE_REMINDER_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentBelongTb',
            fields=[
                ('belong_id', models.AutoField(db_column='BELONG_ID', primary_key=True, serialize=False)),
                ('join_day', models.DateField(db_column='JOIN_DAY')),
                ('leave_day', models.DateField(blank=True, db_column='LEAVE_DAY', null=True)),
            ],
            options={
                'db_table': 'STUDENT_BELONG_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentTb',
            fields=[
                ('user_id', models.CharField(db_column='USER_ID', max_length=8, primary_key=True, serialize=False)),
                ('attendance_number', models.IntegerField(blank=True, db_column='ATTENDANCE_NUMBER', null=True)),
                ('password', models.CharField(db_column='PASSWORD', max_length=60)),
                ('mail', models.CharField(db_column='MAIL', max_length=254)),
                ('user_name', models.CharField(db_column='USER_NAME', max_length=30)),
                ('furigana', models.CharField(db_column='FURIGANA', max_length=60)),
                ('nickname', models.CharField(blank=True, db_column='NICKNAME', max_length=30, null=True)),
                ('icon_url', models.CharField(blank=True, db_column='ICON_URL', max_length=2048, null=True)),
            ],
            options={
                'db_table': 'STUDENT_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherBelongTb',
            fields=[
                ('belong_id', models.AutoField(db_column='BELONG_ID', primary_key=True, serialize=False)),
                ('join_day', models.DateField(db_column='JOIN_DAY')),
                ('leave_day', models.DateField(blank=True, db_column='LEAVE_DAY', null=True)),
            ],
            options={
                'db_table': 'TEACHER_BELONG_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherTb',
            fields=[
                ('user_id', models.CharField(db_column='USER_ID', max_length=8, primary_key=True, serialize=False)),
                ('user_name', models.CharField(db_column='USER_NAME', max_length=30)),
                ('furigana', models.CharField(db_column='FURIGANA', max_length=60)),
                ('mail', models.CharField(db_column='MAIL', max_length=254)),
                ('password', models.CharField(db_column='PASSWORD', max_length=60)),
            ],
            options={
                'db_table': 'TEACHER_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimetableDetailTb',
            fields=[
                ('detail_id', models.AutoField(db_column='DETAIL_ID', primary_key=True, serialize=False)),
                ('subjects', models.CharField(db_column='SUBJECTS', max_length=30)),
                ('room', models.CharField(blank=True, db_column='ROOM', max_length=10, null=True)),
                ('memo', models.CharField(blank=True, db_column='MEMO', max_length=100, null=True)),
            ],
            options={
                'db_table': 'TIMETABLE_DETAIL_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimetableTb',
            fields=[
                ('timetable_id', models.AutoField(db_column='TIMETABLE_ID', primary_key=True, serialize=False)),
                ('created_day', models.DateTimeField(db_column='CREATED_DAY')),
                ('timetable_name', models.CharField(db_column='TIMETABLE_NAME', max_length=30)),
            ],
            options={
                'db_table': 'TIMETABLE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserStateTb',
            fields=[
                ('user_state_id', models.AutoField(db_column='USER_STATE_ID', primary_key=True, serialize=False)),
                ('user_state', models.CharField(db_column='USER_STATE', max_length=30)),
            ],
            options={
                'db_table': 'USER_STATE_TB',
                'managed': False,
            },
        ),
    ]
